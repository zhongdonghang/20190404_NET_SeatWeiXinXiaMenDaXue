@model Senparc.Weixin.MP.Helpers.JsSdkUiPackage
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <title>账号绑定</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="initial-scale=1, maximum-scale=1, user-scalable=no">
    <meta name="format-detection" content="telephone=no">
   
    <link href="/dist/css/frozen.css" rel="stylesheet" />
</head>
<body>

    @*<header class="ui-header ui-header-positive ui-border-b">
        <h1>用户绑定</h1>
    </header>*@




    <section class="ui-container ">
        <div class="ui-slider" id="slider1">
            <ul class="ui-slider-content" style="width: 100%">
                <li><span style="background-image:url(/Img/userbind.png)"></span></li>
            </ul>
        </div>
        <div class="ui-tips ui-tips-info">
            <i></i><span>点击下方按钮扫描绑定二维码进行绑定</span>
        </div>
        <ul class="ui-list ui-list-pure ui-border-tb">
            <li class="ui-border-t">
                <h5>如何获得我的二维码</h5>
                <h4>1：登录PC端预约网站</h4>
                <h4>2：进入"我的微信二维码"</h4>
            </li>
        </ul>
        <div class="ui-btn-wrap">
            <button id="btn_scan" class="ui-btn-lg ui-btn-primary ">
                扫码绑定
            </button>
        </div>
    </section>


    <script src="/dist/lib/zepto.min.js"></script>
    <script src="/dist/js/frozen.js"></script>
    <script src="http://res.wx.qq.com/open/js/jweixin-1.0.0.js"></script>
    <script>
        wx.config({
            debug: false, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。
            appId: '@Model.AppId', // 必填，公众号的唯一标识
            timestamp: '@Model.Timestamp', // 必填，生成签名的时间戳
            nonceStr: '@Model.NonceStr', // 必填，生成签名的随机串
            signature: '@Model.Signature',// 必填，签名
            jsApiList: [
                    'checkJsApi',
                    'onMenuShareTimeline',
                    'onMenuShareAppMessage',
                    'hideMenuItems',
                    'showMenuItems',
                    'hideAllNonBaseMenuItem',
                    'showAllNonBaseMenuItem',
                    'getNetworkType',
                    'hideOptionMenu',
                    'showOptionMenu',
                    'closeWindow',
                    'scanQRCode',
                    'openProductSpecificView'
            ] // 必填，需要使用的JS接口列表，所有JS接口列表见附录2。详见：http://mp.weixin.qq.com/wiki/7/aaa137b55fb2e0456bf8dd9148dd613f.html
        });


        wx.error(function (res) {
            console.log(res);
            alert('验证失败');
        });

        wx.ready(function () {
            $("#btn_scan").click(function () {
                wx.scanQRCode({
                    needResult: 1, // 默认为0，扫描结果由微信处理，1则直接返回扫描结果，
                    scanType: ["qrCode"], // 可以指定扫二维码还是一维码，默认二者都有
                    success: function (res) {
                        var result = res.resultStr; // 当needResult 为 1 时，扫码返回的结果
                        $.post("/User/ScanBindUserInfo/",
                        {
                            ScanResult: result
                        },
                        function (data, textStatus) {
                            if (textStatus == "success") {

                                if (data.status == "yes") {
                                    alert(data.message);
                                    //window.location.href = "/User/Index";
                                    wx.closeWindow();
                                }
                                else {
                                    alert("绑定失败:" + data.message);
                                }
                            }
                            else {
                                alert("操作失败！");
                            }
                        }, "json").error(function (XMLHttpRequest, textStatus, errorThrown) { alert(XMLHttpRequest + textStatus + errorThrown); });

                    }
                });
            });
        });
    </script>
</body>
</html>
